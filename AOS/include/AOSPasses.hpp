#pragma once

#include <vector>
#include <iostream>

#define MIN_OPT 0
#define MAX_OPT 108 

#define NONE 0
#define BASICAA 1
#define EARLY_CSE 2
#define _GVN 3
#define INSTCOMBINE 4
#define INDVARS 5
#define LICM 6
#define LOOP_INSTSIMPLIFY 7
#define LOOP_REDUCE 8
#define LOOP_IDIOM 9
#define LOOP_DELETION 10
#define LOOP_ROTATE 11
#define LOOP_UNROLL 12
#define REASSOCIATE 13
#define SIMPLIFYCFG 14
#define TAILCALLELIM 15
#define UNROLL_ALLOW_PARTIAL 16
#define SIMPLIFY_LIBCALLS 17
#define SCALARREPL 18
#define CONSTPROP 19 
#define ALIGNMENT_FROM_ASSSUMPTIONS 20
#define SCCP 21
#define DCE 22
#define DIE 23
#define DSE 24
#define CALLSITE_SPLITTING 25
#define ADCE 26
#define GUARD_WIDENING 27
#define BDCE 28
#define SROA 29
#define IRCE 30
#define LOOP_SINK 31
#define LOOP_PREDICATION 32
#define LOOP_INTERCHANGE 33
#define LOOP_UNSWITCH 34
#define LOOP_UNROLL_AND_JAM 35
#define LOOP_REROLL 36
#define LOOP_VERSIONING_LICM 37
#define JUMP_THREADING 38
#define FLATTENCFG 39
#define STRUCTURIZECFG 40
#define _GVN_HOIST 41
#define _GVN_SINK 42
#define MLDST_MOTION 43
#define NEWGVN 44
#define MEMCPYOPT 45 
#define CONSTHOIST 46
#define SINK 47
#define LOWERATOMIC 48
#define LOWER_GUARD_INTRINSIC 49
#define MERGEICMPS 50
#define CORRELATED_PROPAGATION 51
#define LOWER_EXPECT 52
#define PARTIALLY_INLINE_LIBCALLS 53
#define SCALARIZER 54
#define SEPARATE_CONST_OFFSET_FROM_GEP 55
#define SLSR 56
#define PLACE_SAFEPOINTS 57
#define FLOAT2INT 58
#define NARY_REASSOCIATE 59
#define LOOP_DISTRIBUTE 60
#define LOOP_LEAD_ELIM 61
#define LOOP_VERSIONING 62
#define LOOP_DATA_PREFETCH 63
#define INSTSIMPLIFY 64
#define AGGRESSIVE_INSTCOMBINE 65
#define LOWERINVOKE 66
#define INSTNAMER 67
#define LOWERSWITCH 68
#define BREAK_CRIT_EDGES 69
#define LCSSA 70
#define MEM2REG 71
#define LOOP_SINMPLIFY 72
#define LOOP_VECTORIZE 73
#define SLP_VECTORIZER 74
#define LOAD_STORE_VECTORIZER 75
#define LAZY_VALUE_INFO 76
#define DA 77
#define COST_MODEL 78
#define DELINEARIZE 79
#define DIVERGENCE 80
#define INSTCOUNT 81
#define REGIONS 82
#define DOMTREE 83
#define CONSTMERGE 84
#define GLOBALOPT 85
#define INLINE 86
#define IPSCCP 87
#define PARTIAL_INLINER 88
#define REWRITE_STATEPOINTS_FOR_GCC 89
#define STRIP 90
#define STRIP_NONDEBUG 91
#define STRIP_DEBUG_DECLARE 92
#define STRIP_DEAD_DEBUG_INFO 93
#define	GLOBALDCE 94
#define ELIM_AVAIL_EXTERN 95
#define	PRUNE_EH 96
#define	DEADARGELIM 97
#define ARGPROMOTION 98
#define IPCONSTPROP 99
#define LOOP_EXTRACT 100
#define LOOP_EXTRACT_SINGLE 101
#define EXTRACT_BLOCKS 102
#define STRIP_DEAD_PROTOTYPES 103
#define MERGE_FUNC 104
#define BARRIER 105
#define CALLED_VALUE_PROPAGATION 106
#define CROSS_DSO_CFI 107
#define GLOBALSPLIT 108
#define METARENAMER 109
#define PA_EVAL 110
#define INTERNALIZE 111
#define INFER_ADDRESS_SPACES 112
#define SPECULATIVE_EXECUTION 113
#define CODEGENPREPARE 114
#define LOOP_GUARD_WIDENING 115
#define DIV_REM_PAIRS 116

static std::vector<std::vector<uint16_t>> BEST10_SET = {
  {INSTCOMBINE, SIMPLIFYCFG, _GVN, INDVARS, LOOP_ROTATE, UNROLL_ALLOW_PARTIAL, LOOP_UNROLL, 
    LOOP_ROTATE, LOOP_UNROLL, _GVN, INLINE, EARLY_CSE, BASICAA, REASSOCIATE, INSTCOMBINE},
  {SIMPLIFY_LIBCALLS, SIMPLIFYCFG, UNROLL_ALLOW_PARTIAL, INTERNALIZE, _GVN, INSTCOMBINE, INLINE, 
    GLOBALOPT, SCALARREPL, LOOP_ROTATE, LOOP_UNROLL, LOOP_INSTSIMPLIFY},
  {_GVN, LOOP_ROTATE, INTERNALIZE, INLINE, LICM, TAILCALLELIM, INSTCOMBINE, BASICAA, INDVARS},
  {CODEGENPREPARE, LOOP_ROTATE, LOOP_IDIOM, LOOP_DELETION, _GVN},
  {LOOP_ROTATE, INLINE, SIMPLIFY_LIBCALLS, BASICAA, LICM, CONSTMERGE, INDVARS, UNROLL_ALLOW_PARTIAL, 
    LOOP_UNROLL, REASSOCIATE, _GVN},
  {SIMPLIFYCFG, TAILCALLELIM, EARLY_CSE, LOOP_ROTATE, INTERNALIZE, PARTIAL_INLINER, INSTCOMBINE, 
    INLINE, IPSCCP},
  {INTERNALIZE, INLINE, GLOBALOPT, EARLY_CSE, LICM, BASICAA, INDVARS, LOOP_REDUCE},
  {CODEGENPREPARE, _GVN, TAILCALLELIM, REASSOCIATE, BASICAA, INLINE, LOOP_ROTATE, INDVARS, 
    REASSOCIATE},
  {SIMPLIFYCFG, TAILCALLELIM, INSTCOMBINE, EARLY_CSE},
  {EARLY_CSE, SIMPLIFYCFG, _GVN, INLINE, LOOP_REDUCE, LICM, INSTCOMBINE, _GVN, REASSOCIATE}
};
